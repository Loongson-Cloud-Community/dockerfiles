From 199c6a5f525c7a6339c9880bd2ad3d9043ab043d Mon Sep 17 00:00:00 2001
From: wangweijie <wangweijie@loongson.cn>
Date: Tue, 7 Mar 2023 01:25:53 +0000
Subject: [PATCH] port to loong64

---
 Makefile                        |  8 +++-----
 clients/cmd/promtail/Dockerfile | 13 +++++--------
 2 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/Makefile b/Makefile
index c44ad2971..eff3a3df8 100644
--- a/Makefile
+++ b/Makefile
@@ -30,7 +30,7 @@ BUILD_IN_CONTAINER ?= true
 BUILD_IMAGE_VERSION := 0.21.0
 
 # Docker image info
-IMAGE_PREFIX ?= grafana
+IMAGE_PREFIX ?= cr.loongnix.cn/grafana
 
 IMAGE_TAG := $(shell ./tools/image-tag)
 
@@ -45,7 +45,7 @@ DONT_FIND := -name tools -prune -o -name vendor -prune -o -name .git -prune -o -
 # Build flags
 VPREFIX := github.com/grafana/loki/pkg/util/build
 GO_LDFLAGS   := -X $(VPREFIX).Branch=$(GIT_BRANCH) -X $(VPREFIX).Version=$(IMAGE_TAG) -X $(VPREFIX).Revision=$(GIT_REVISION) -X $(VPREFIX).BuildUser=$(shell whoami)@$(shell hostname) -X $(VPREFIX).BuildDate=$(shell date -u +"%Y-%m-%dT%H:%M:%SZ")
-GO_FLAGS     := -ldflags "-extldflags \"-static\" -s -w $(GO_LDFLAGS)" -tags netgo
+GO_FLAGS     := -ldflags "-extldflags \"-static\" -s -w $(GO_LDFLAGS)"
 DYN_GO_FLAGS := -ldflags "-s -w $(GO_LDFLAGS)" -tags netgo
 # Per some websites I've seen to add `-gcflags "all=-N -l"`, the gcflags seem poorly if at all documented
 # the best I could dig up is -N disables optimizations and -l disables inlining which should make debugging match source better.
@@ -184,7 +184,7 @@ PROMTAIL_DEBUG_GO_FLAGS := $(DEBUG_GO_FLAGS)
 ifeq ($(shell go env GOHOSTOS),linux)
 ifeq ($(shell go env GOOS),linux)
 ifneq ($(CGO_ENABLED), 0)
-PROMTAIL_CGO = 1
+PROMTAIL_CGO = 0
 endif
 PROMTAIL_GO_FLAGS = $(DYN_GO_FLAGS)
 PROMTAIL_DEBUG_GO_FLAGS = $(DYN_DEBUG_GO_FLAGS)
@@ -204,11 +204,9 @@ $(PROMTAIL_GENERATED_FILE): $(PROMTAIL_UI_FILES)
 
 clients/cmd/promtail/promtail:
 	CGO_ENABLED=$(PROMTAIL_CGO) go build $(PROMTAIL_GO_FLAGS) -o $@ ./$(@D)
-	$(NETGO_CHECK)
 
 clients/cmd/promtail/promtail-debug:
 	CGO_ENABLED=$(PROMTAIL_CGO) go build $(PROMTAIL_DEBUG_GO_FLAGS) -o $@ ./$(@D)
-	$(NETGO_CHECK)
 
 #########
 # Mixin #
diff --git a/clients/cmd/promtail/Dockerfile b/clients/cmd/promtail/Dockerfile
index a7e782f62..da08db54d 100644
--- a/clients/cmd/promtail/Dockerfile
+++ b/clients/cmd/promtail/Dockerfile
@@ -1,21 +1,18 @@
-FROM golang:1.17.9-bullseye as build
+FROM cr.loongnix.cn/library/golang:1.19-buster as build
 
 COPY . /src/loki
 WORKDIR /src/loki
-# Backports repo required to get a libsystemd version 246 or newer which is required to handle journal +ZSTD compression
-RUN echo "deb http://deb.debian.org/debian bullseye-backports main" >> /etc/apt/sources.list
-RUN apt-get update && apt-get install -t bullseye-backports -qy libsystemd-dev
+RUN apt-get update && apt-get install -qy libsystemd-dev
 RUN make clean && make BUILD_IN_CONTAINER=false promtail
 
 # Promtail requires debian as the base image to support systemd journal reading
-FROM debian:bullseye-slim
+FROM cr.loongnix.cn/library/debian:buster
 # tzdata required for the timestamp stage to work
-# Backports repo required to get a libsystemd version 246 or newer which is required to handle journal +ZSTD compression
-RUN echo "deb http://deb.debian.org/debian bullseye-backports main" >> /etc/apt/sources.list
+LABEL maintainer="wangweijie@loongson.cn"
 RUN apt-get update && \
   apt-get install -qy \
   tzdata ca-certificates
-RUN apt-get install -t bullseye-backports -qy libsystemd-dev && \
+RUN apt-get install -qy libsystemd-dev && \
   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 COPY --from=build /src/loki/clients/cmd/promtail/promtail /usr/bin/promtail
 COPY clients/cmd/promtail/promtail-docker-config.yaml /etc/promtail/config.yml
-- 
2.20.1

