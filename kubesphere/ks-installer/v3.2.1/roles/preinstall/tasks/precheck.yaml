---
#- name: KubeSphere | Checking Kubernetes version
#  shell: >
#    {{ bin_dir }}/kubectl version -o json | jq -r '.serverVersion.gitVersion'
#  register: kubernetes_version
#
#- name: KubeSphere | Initing Kubernetes version
#  set_fact: >
#     k8s_version: {{ kubernetes_version }}

- name: KubeSphere | Stopping if Kubernetes version is nonsupport
  assert:
    that: kubernetes_version is version('v1.19.0', '>=')
    msg: "The current Kubernetes version is not supported !"

- name: KubeSphere | Checking StorageClass
  shell: >
    {{ bin_dir }}/kubectl get sc | awk '{if(NR>1){print $1}}'
  register: storage_class_check

- name: KubeSphere | Stopping if StorageClass was not found
  assert:
    that: persistence.storageClass in storage_class_check.stdout_lines
    msg: "StorageClass {{ persistence.storageClass }} was not found !"
  when:
    - persistence.storageClass is defined
    - persistence.storageClass != ""

- name: KubeSphere | Checking default StorageClass
  shell: >
    {{ bin_dir }}/kubectl get sc
  register: default_storage_class_check

- name: KubeSphere | Stopping if default StorageClass was not found
  assert:
    that: '"(default)" in default_storage_class_check.stdout'
    msg: "Default StorageClass was not found !"
  when:
    - persistence.storageClass is defined
    - persistence.storageClass == ""

