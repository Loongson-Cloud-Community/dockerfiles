apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubeedge
    kubeedge: cloudcore
  name: cloudcore
spec:
  selector:
    matchLabels:
      k8s-app: kubeedge
      kubeedge: cloudcore
  template:
    metadata:
      labels:
        k8s-app: kubeedge
        kubeedge: cloudcore
    spec:
      hostNetwork: false
      containers:
      - name: cloudcore
        image: {{ .Values.cloudCore.repository }}:{{ .Values.cloudCore.tag }}
        imagePullPolicy: {{ .Values.cloudCore.pullPolicy }}
        ports:
        - containerPort: {{ .Values.cloudCore.cloudhubPort }}
          name: cloudhub
          protocol: TCP
        - containerPort: {{ .Values.cloudCore.cloudhubQuicPort }}
          name: cloudhub-quic
          protocol: TCP
        - containerPort: {{ .Values.cloudCore.cloudhubHttpsPort }}
          name: cloudhub-https
          protocol: TCP
        - containerPort: {{ .Values.cloudCore.cloudstreamPort }}
          name: cloudstream
          protocol: TCP
        - containerPort: {{ .Values.cloudCore.tunnelPort }}
          name: tunnelport
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: conf
          mountPath: /etc/kubeedge/config
        - name: certs
          mountPath: /etc/kubeedge
        - name: sock
          mountPath: /var/lib/kubeedge
        - mountPath: /etc/localtime
          name: host-time
          readOnly: true
      restartPolicy: Always
      {{- with .Values.cloudCore.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cloudCore.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: cloudcore
      serviceAccountName: cloudcore
      volumes:
      - name: conf
        configMap:
          name: cloudcore
      - name: certs
        secret:
          secretName: cloudcore
          items:
          - key: stream.crt
            path: certs/stream.crt
          - key: stream.key
            path: certs/stream.key
          - key: streamCA.crt
            path: ca/streamCA.crt
      - name: sock
        hostPath:
          path: /var/lib/kubeedge
          type: DirectoryOrCreate
      - hostPath:
          path: /etc/localtime
          type: ""
        name: host-time
