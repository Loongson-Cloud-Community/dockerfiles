# This file is generated by the template.

REGISTRY?=cr.loongnix.cn
ORGANIZATION?=prometheus
REPOSITORY?=prometheus
TAG?=2025-0422
LATEST?=false

IMAGE=$(REGISTRY)/$(ORGANIZATION)/$(REPOSITORY):$(TAG)
LATEST_IMAGE=$(REGISTRY)/$(ORGANIZATION)/$(REPOSITORY):latest

# SOURCE_URL is a url to download source, such as https://github.com/merore/merore.git.
# SOURCE is project sources, its located at src/$(SORUCE).
# PATCH is a patch that supports loong64 to $(SOURCE).
# Be sure to fill in the follows!!!
SOURCE_URL=https://github.com/$(ORGANIZATION)/$(REPOSITORY).git
SOURCE=$(shell echo $(SOURCE_URL) | awk -F '/' '{print $$NF}' | awk -F '.' '{print $$1}')
PATCH=0001-add-loong64-support.patch

COMMON_SELF_DIR := $(dir $(lastword $(MAKEFILE_LIST)))
ROOT_DIR := $(abspath $(shell cd $(COMMON_SELF_DIR) && pwd -P))

default: image

src/$(SOURCE):
	git clone $(SOURCE_URL) --depth=1000 $@ && \
	cd $@ && \
	commit_date=$$(git show -s --format=%ci a511164 | cut -d' ' -f1) && \
	target_commit=$$(git rev-list -n 1 --before="$$commit_date 23:59:59" origin/main) && \
	git checkout $$target_commit && git apply ../../0001-add-loong64-support.patch

build: src/$(SOURCE)
	docker run --rm  \
    -v $(ROOT_DIR)/src/$(SOURCE):/v -w /v --entrypoint bash cr.loongnix.cn/library/node:20.8 -c ' \
    set -e; \
    cd web/ui && \
    echo "[1] 清除 lock 文件" && rm -f package-lock.json && \
    echo "[2] 设置 registry" && npm config set registry https://registry.loongnix.cn:4873 && npm config get registry && \
    echo "[3] 开始 npm install (实时 verbose 输出)" && npm config set strict-ssl false && npm install --no-audit --verbose | tee /tmp/npm_install.log && \
    echo "[3] 开始 react-app npm install (实时 verbose 输出)" && cd react-app && npm install --no-audit --verbose | tee /tmp/npm_install.log && \
    echo "[4] 开始构建前端 (实时输出)" && cd .. && CI="" npm run build | tee /tmp/npm_build.log &&  \
    echo "[5] 构建完成，开始压缩资源" && cd ../../ && scripts/compress_assets.sh && \
    echo "[6] 全部完成"'
build-go: build
	docker run --rm -e https_proxy=${https_proxy} -e http_proxy=${http_proxy} \
		-v $(ROOT_DIR)/src/$(SOURCE):/v -w /v --entrypoint make cr.loongnix.cn/library/golang:1.23-buster build PROMU_VERSION=0.17.0

image: build-go 
	DOCKER_IMG=$(IMAGE) \
	DOCKER_ARCHS=loong64 \
	DOCKER_BUILD_ARGS="--build-arg https_proxy=${https_proxy} --build-arg http_proxy=${http_proxy} \
		--build-arg WEB_IMG=docker.m.daocloud.io/prom/$(REPOSITORY):latest" \
		$(MAKE) -C src/$(SOURCE) docker

push:
	docker push $(IMAGE)

clean:
	rm -rf src
