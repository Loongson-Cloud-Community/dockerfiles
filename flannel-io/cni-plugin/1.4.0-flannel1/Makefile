# This file is generated by the template.

REGISTRY?=cr.loongnix.cn
ORGANIZATION?=flannel
REPOSITORY?=flannel-cni-plugin
TAG?=v1.4.0-flannel1
LATEST?=false

GO_IMG?=cr.loongnix.cn/library/golang:1.21
GOPROXY?=https://goproxy.cn,https://mirrors.aliyun.com/goproxy/,https://goproxy.io,direct

IMAGE=$(REGISTRY)/$(ORGANIZATION)/$(REPOSITORY):$(TAG)
LATEST_IMAGE=$(REGISTRY)/$(ORGANIZATION)/$(REPOSITORY):latest

SOURCE_URL=https://github.com/flannel-io/cni-plugin.git
SOURCE=$(shell echo $(SOURCE_URL) | awk -F '/' '{print $$NF}' | awk -F '.' '{print $$1}')
PATCH=0001-support-loong64.patch

default: image

src/$(SOURCE):
	git clone -b $(TAG) --depth=1 $(SOURCE_URL) $@
	cd $@ && \
		git apply ../../$(PATCH)

build: src/$(SOURCE)
	docker run --rm \
		-e GOARCH=loong64 \
		-e GOPROXY=$(GOPROXY) \
		-e http_proxy=$(http_proxy) -e https_proxy=$(https_proxy) \
		-v `pwd`/src/$(SOURCE):/v -w /v \
		$(GO_IMG) ./scripts/build_flannel.sh

image: src/$(SOURCE) build
	cd src/$(SOURCE) && \
	docker build --build-arg BASE_IMG=cr.loongnix.cn/library/alpine:3.11 \
		-f Dockerfile.image \
		-t $(IMAGE) .

push:
	docker push $(IMAGE)
	@if [ $(LATEST) = "true" ]; \
		then\
		docker tag $(IMAGE) $(LATEST_IMAGE); \
		docker push $(LATEST_IMAGE); \
	fi

clean:
	rm -rf src
