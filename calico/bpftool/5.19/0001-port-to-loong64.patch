From 1ea15e00ebf9ac466777981f72c1cbb30e156fa4 Mon Sep 17 00:00:00 2001
From: znley <shanjiantao@loongson.cn>
Date: Sat, 18 Feb 2023 16:39:29 +0800
Subject: [PATCH] port to loong64

---
 Dockerfile.loong64 | 29 +++++++++++++++++++++++++++++
 Makefile           | 10 +++++++++-
 2 files changed, 38 insertions(+), 1 deletion(-)
 create mode 100644 Dockerfile.loong64

diff --git a/Dockerfile.loong64 b/Dockerfile.loong64
new file mode 100644
index 0000000..a35e78a
--- /dev/null
+++ b/Dockerfile.loong64
@@ -0,0 +1,29 @@
+FROM cr.loongnix.cn/library/debian:buster as bpftool-build
+ARG KERNEL_REPO=git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
+ARG KERNEL_REF=master
+
+RUN apt-get update && \
+apt-get upgrade -y && \
+apt-get install -y --no-install-recommends \
+    gpg gpg-agent libelf-dev libmnl-dev libc-dev iptables libgcc-8-dev \
+    bash-completion binutils binutils-dev make git curl \
+    ca-certificates xz-utils gcc pkg-config bison flex build-essential python3 libreadline-dev && \
+apt-get purge --auto-remove && \
+apt-get clean
+
+WORKDIR /tmp
+
+RUN \
+git clone --depth 1 -b $KERNEL_REF $KERNEL_REPO && \
+cd linux/tools/bpf/bpftool/ && \
+sed -i '/CFLAGS += -O2/a CFLAGS += -static' Makefile && \
+printf 'feature-libbfd=0\nfeature-libelf=1\nfeature-bpf=1\nfeature-libelf-mmap=1\nfeature-zlib=1' >> FEATURES_DUMP.bpftool && \
+FEATURES_DUMP=`pwd`/FEATURES_DUMP.bpftool make -j `getconf _NPROCESSORS_ONLN` && \
+strip bpftool && \
+ldd bpftool 2>&1 | grep -q -e "Not a valid dynamic program" \
+	-e "not a dynamic executable" || \
+	( echo "Error: bpftool is not statically linked"; false ) && \
+mv bpftool /usr/bin && rm -rf /tmp/linux
+
+FROM scratch
+COPY --from=bpftool-build /usr/bin/bpftool /bpftool
diff --git a/Makefile b/Makefile
index a68641d..7f55b46 100644
--- a/Makefile
+++ b/Makefile
@@ -25,6 +25,9 @@ endif
 ifeq ($(BUILDARCH),armv7l)
         BUILDARCH=armv7
 endif
+ifeq ($(BUILDARCH),loongarch64)
+        BUILDARCH=loong64
+endif
 
 # unless otherwise set, I am building for my own architecture, i.e. not cross-compiling
 ARCH ?= $(BUILDARCH)
@@ -74,7 +77,12 @@ image: $(DEFAULTORG)/bpftool
 $(DEFAULTORG)/bpftool: register
 	# Make sure we re-pull the base image to pick up security fixes.
 	# Limit the build to use only one CPU, This helps to work around qemu bugs such as https://bugs.launchpad.net/qemu/+bug/1098729
-	docker build $(DOCKER_BUILD_ARGS) --build-arg KERNEL_REF=$(KERNELREF) --build-arg KERNEL_REPO=$(KERNELREPO) --cpuset-cpus 0 --pull -t $(ARCHIMAGE) -f $(DOCKERFILE) .
+	docker build $(DOCKER_BUILD_ARGS) \
+		--build-arg KERNEL_REF=$(KERNELREF) \
+		--build-arg KERNEL_REPO=$(KERNELREPO)  \
+		--build-arg http_proxy=$(http_proxy)  \
+		--build-arg https_proxy=$(https_proxy)  \
+		--cpuset-cpus 0 --pull -t $(ARCHIMAGE) -f $(DOCKERFILE) .
 
 image-all: $(addprefix sub-image-,$(ARCHES))
 sub-image-%:
-- 
2.27.0

